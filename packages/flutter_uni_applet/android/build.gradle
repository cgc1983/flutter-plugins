group 'com.barry.flutter_uni_applet'
version '1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.7.10'
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.3.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

rootProject.allprojects {
    repositories {
        google()
        mavenCentral()
        flatDir {
            dirs project(':flutter_uni_applet').file('libs')
        }
    }
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"

android {
    namespace 'com.barry.flutter_uni_applet'

    compileSdk = 35

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }

    defaultConfig {
        minSdk 19
        manifestPlaceholders = [
            //包名
            "apk.applicationId" : "com.barry.flutter_uni_applet_example",
        ]
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
        }
    }


    //此处配置必须添加 否则无法正确运行
    aaptOptions {
        additionalParameters '--auto-add-overlay'
        //noCompress 'foo', 'bar'
        ignoreAssetsPattern "!.svn:!.git:.*:!CVS:!thumbs.db:!picasa.ini:!*.scc:*~"
    }

    dependencies {
        //导入SDK相关依赖jar、aar
//        implementation fileTree(include: ['*.jar'], dir: 'libs')
//        implementation fileTree(include: ['*.aar'], dir: 'libs')
        // 自动导入所有 .jar 和 .aar
        def localLibsDir = file('libs')
        if (localLibsDir.exists()) {
            localLibsDir.eachFile { file ->
                if (file.name.endsWith('.jar') || file.name.endsWith('.aar')) {
                    def name = file.name.substring(0, file.name.lastIndexOf('.'))
                    def ext = file.name.substring(file.name.lastIndexOf('.') + 1)
                    dependencies.add('implementation', [name: name, ext: ext])
                }
            }
        }
        //必须添加的依赖
        implementation "androidx.recyclerview:recyclerview:1.1.0"
        implementation "androidx.legacy:legacy-support-v4:1.0.0"
        implementation "androidx.appcompat:appcompat:1.1.0"
        implementation 'com.alibaba:fastjson:1.2.83'
        implementation 'com.facebook.fresco:fresco:2.5.0'
        implementation 'com.facebook.fresco:animated-gif:2.5.0'
        implementation 'com.facebook.fresco:webpsupport:2.5.0'
        implementation 'com.facebook.fresco:animated-webp:2.5.0'
        implementation 'com.github.bumptech.glide:glide:4.9.0'
        implementation 'com.android.support:multidex:1.0.3'

        implementation 'com.squareup.okhttp3:okhttp:3.7.0'
        implementation 'com.squareup.okio:okio:1.8.0'
        // add since 2022-12-29
        implementation 'androidx.webkit:webkit:1.3.0'
        // add since 2023-03-30 微信支付/分享  需要新增配置
        implementation 'com.tencent.mm.opensdk:wechat-sdk-android:6.8.0'
//
//        implementation 'androidx.core:core-ktx:1.10.0'

        testImplementation 'org.jetbrains.kotlin:kotlin-test'
        testImplementation 'org.mockito:mockito-core:5.0.0'
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
               events "passed", "skipped", "failed", "standardOut", "standardError"
               outputs.upToDateWhen {false}
               showStandardStreams = true
            }
        }
    }
}
